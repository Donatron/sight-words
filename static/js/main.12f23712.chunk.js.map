{"version":3,"sources":["components/utils/LanguageSelector.js","config/config.js","store/actions/types.js","store/actions/index.js","store/actions/auth.js","components/layout/Navigation.js","components/layout/Header.js","components/utils/AlertBox.js","components/user/Register.js","components/user/ConfirmEmail.js","components/user/ForgotPassword.js","components/user/ResetPassword.js","components/user/Login.js","components/sightWords/Syllables.js","components/sightWords/Word.js","components/utils/NoItems.js","components/utils/TextToSpeech.js","utils/utils.js","store/actions/sightWords.js","components/sightWords/SightWords.js","components/sightWords/RandomWords.js","components/sightWords/WordDetails.js","components/modals/AddWordModal.js","components/modals/DeleteConfirmModal.js","components/sightWords/UpdateWordList.js","components/phrases/Phrase.js","store/actions/phrases.js","components/phrases/Phrases.js","components/phrases/RandomPhrases.js","components/phrases/PhraseDetails.js","components/modals/AddPhraseModal.js","components/modals/EditPhraseModal.js","components/phrases/UpdatePhraseList.js","components/utils/LoadingSpinner.js","components/utils/NotFound.js","App.js","store/reducers/alertReducer.js","store/reducers/authReducer.js","store/reducers/errorReducer.js","store/reducers/loadingReducer.js","store/reducers/phrasesReducer.js","store/reducers/userReducer.js","store/reducers/wordsReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["LanguageSelector","onChangeLanguage","useState","selected","setSelected","className","xs","onSelect","code","countries","placeholder","countryCode","toLowerCase","primary","secondary","console","log","rootUrl","SET_LOADING","SET_AUTH_TOKEN","CLEAR_AUTH_TOKEN","FETCH_USER","SET_ERROR","CLEAR_ERROR","FETCH_SIGHT_WORDS","CLEAR_SIGHT_WORDS","FETCH_PHRASES","CLEAR_PHRASES","RESET_STATE","SHOW_ALERT","CLEAR_ALERT","serverError","setServerError","err","response","data","message","setLoading","type","setError","payload","clearError","showAlert","location","clearAlert","setAuthToken","token","fetchUser","user","connect","logoutUser","props","showNavbar","setShowNavbar","t","useTranslation","expand","onClick","bg","navbar","isOpen","inNavbar","nav","caret","end","to","state","auth","alert","style","color","registerUser","userData","dispatch","a","axios","post","setTimeout","name","email","userName","password","passwordConfirm","formData","setFormData","handleChange","e","target","value","alertType","size","offset","icon","faArrowRight","md","for","id","onChange","confirmEmail","patch","useParams","lg","forgotPassword","setUserName","faArrowLeft","resetPassword","setPassword","setPasswordConfirm","loginUser","loginData","userPassword","setUserPassword","Syllables","syllables","split","map","syllable","i","length","Word","selectedWord","word","NoItems","redirectTo","typeString","join","TextToSpeech","text","speak","useSpeechSynthesis","rate","setRate","faVolumeUp","min","max","step","handleSliderChange","setRequestHeaders","fetchSightWords","options","get","headers","status","sightWords","words","wordIndex","setWordIndex","wordList","filter","complete","useEffect","faArrowAltCircleLeft","faArrowAltCircleRight","generateRandomWordIndex","Math","floor","random","wordObject","onClickDelete","onClickComplete","scope","faCheckSquare","faSquare","params","_id","faTrashAlt","insertSightWord","wordData","toggleModal","setWordData","handleInputChange","toggle","centered","bsSize","DeleteConfirmModal","onConfirmDelete","phraseId","updateSightWord","wordId","deleteSightWord","delete","sort","b","showAddWordModal","setShowAddWordModal","showConfirmDeleteModal","setShowConfirmDeleteModal","setWordId","toggleAddWordModal","toggleConfirmDeleteModal","handleClickComplete","faPlusSquare","hover","Phrase","phrase","selectedPhrase","fetchPhrases","phrases","phraseIndex","setPhraseIndex","phraseList","generateRandomPhraseIndex","onClickEdit","insertPhrase","setPhrase","onConfirmEdit","updatePhrase","deletePhrase","showAddPhraseModal","setShowAddPhraseModal","showEditPhraseModal","setShowEditPhraseModal","setShowConfirmDeletePhraseModal","setPhraseId","toggleEditPhraseModal","LoadingSpinner","NotFound","useLocation","process","pathname","i18n","use","initReactI18next","init","resources","gb","translation","translationsEn","th","translationsTh","lng","fallbackLng","interpolation","excapeValue","loading","language","changeLanguage","exact","path","component","initialState","combineReducers","action","error","persistConfig","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","key","storage","blacklist","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.12f23712.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport ReactFlagsSelect from 'react-flags-select';\n\nconst LanguageSelector = ({ onChangeLanguage }) => {\n  const [selected, setSelected] = useState('GB');\n\n  const onSelect = (countryCode) => {\n    setSelected(countryCode)\n    onChangeLanguage(countryCode.toLowerCase());\n  }\n\n  return (\n    <Row className=\"language-selector\">\n      <Col xs={12} className=\"language-selector_content\">\n        <ReactFlagsSelect\n          selected={selected}\n          onSelect={code => setSelected(code)}\n          countries={[\"GB\", \"TH\"]}\n          placeholder=\"Select Language\"\n          onSelect={onSelect}\n          showSelectedLabel={false}\n          showOptionLabel={false}\n          customLabels={{\n            \"TH\": { primary: \"TH\", secondary: \"Thai\" },\n            \"GB\": { primary: \"GB\", secondary: \"English\" }\n          }}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default LanguageSelector;","let rootUrl;\n\nif (process.env.NODE_ENV === 'production') {\n  console.log('Production...');\n  rootUrl = 'https://sightwords-app.herokuapp.com';\n} else if (process.env.NODE_ENV === 'development') {\n  console.log('Dev...')\n  rootUrl = 'http://localhost:5000'\n}\n\nexport default rootUrl;","export const SET_LOADING = 'SET_LOADING';\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const CLEAR_AUTH_TOKEN = 'CLEAR_AUTH_TOKEN';\nexport const FETCH_USER = 'FETCH_USER';\nexport const SET_ERROR = 'SET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\nexport const FETCH_SIGHT_WORDS = 'FETCH_SIGHT_WORDS';\nexport const INSERT_SIGHT_WORD = 'INSERT_SIGHT_WORD';\nexport const UPDATE_SIGHT_WORD = 'UPDATE_SIGHT_WORD';\nexport const DELETE_SIGHT_WORD = 'DELETE_SIGHT_WORD';\nexport const CLEAR_SIGHT_WORDS = 'CLEAR_SIGHT_WORDS';\nexport const FETCH_PHRASES = 'FETCH_PHRASES';\nexport const INSERT_PHRASE = 'INSERT_PHRASE';\nexport const UPDATE_PHRASE = 'UPDATE_PHRASE';\nexport const DELETE_PHRASE = 'DELETE_PHRASE';\nexport const CLEAR_PHRASES = 'CLEAR_PHRASES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const SHOW_ALERT = 'SHOW_ALERT';\nexport const CLEAR_ALERT = 'CLEAR_ALERT';","import {\n  SET_LOADING,\n  SET_ERROR,\n  CLEAR_ERROR,\n  SHOW_ALERT,\n  CLEAR_ALERT\n} from './types';\n\nlet serverError = 'System error. Please try again later.';\n\nexport const setServerError = (err) => {\n  if (err.response && err.response.data.message) serverError = err.response.data.message;\n  return serverError\n}\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  }\n}\n\nexport const setError = (message) => {\n  return {\n    type: SET_ERROR,\n    payload: {\n      message\n    }\n  }\n}\n\nexport const clearError = () => {\n  return {\n    type: CLEAR_ERROR\n  }\n}\n\nexport const showAlert = (type, location, message) => {\n  return {\n    type: SHOW_ALERT,\n    payload: {\n      type,\n      location,\n      message\n    }\n  }\n}\n\nexport const clearAlert = () => {\n  return {\n    type: CLEAR_ALERT\n  }\n}","import axios from 'axios';\n\nimport rootUrl from '../../config/config';\nimport { showAlert, clearAlert, setLoading } from './index';\n\nimport {\n  SET_AUTH_TOKEN,\n  RESET_STATE,\n  FETCH_USER,\n} from './types';\n\nconst setAuthToken = (token) => {\n  return {\n    type: SET_AUTH_TOKEN,\n    payload: `Bearer ${token}`\n  }\n}\n\nexport const loginUser = (user) => async (dispatch) => {\n  const loginData = {\n    userName: user.userName,\n    password: user.password\n  }\n\n  dispatch(setLoading());\n\n  try {\n    const response = await axios.post(`${rootUrl}/users/login`, loginData);\n\n    dispatch(setAuthToken(response.data.token));\n    dispatch(fetchUser(response.data.data.user));\n  } catch (err) {\n    dispatch(showAlert('danger', 'login', err.response.data.message));\n\n    setTimeout(() => {\n      dispatch(clearAlert());\n    }, 5000);\n  }\n\n  dispatch(setLoading());\n}\n\nexport const registerUser = (userData) => async (dispatch) => {\n  dispatch(setLoading());\n\n  try {\n    const response = await axios.post(`${rootUrl}/users/signup`, userData);\n\n    dispatch(showAlert('success', 'register', response.data.message));\n  } catch (err) {\n    dispatch(showAlert('danger', 'register', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert());\n  }, 5000);\n\n  dispatch(setLoading());\n}\n\nexport const confirmEmail = (token) => async (dispatch) => {\n  dispatch(setLoading());\n\n  try {\n    const response = await axios.patch(`${rootUrl}/users/emailConfirm/${token}`);\n\n    dispatch(showAlert('success', 'confirmEmail', 'Thanks for confirming your email!'));\n\n    dispatch(setAuthToken(response.data.token));\n    dispatch(fetchUser(response.data.data.user));\n  } catch (err) {\n    dispatch(showAlert('danger', 'confirmEmail', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert());\n  }, 5000);\n\n  dispatch(setLoading());\n}\n\nexport const logoutUser = () => {\n  return {\n    type: RESET_STATE\n  }\n}\n\nexport const forgotPassword = (user) => async (dispatch) => {\n  dispatch(setLoading());\n\n  try {\n    const response = await axios.post(`${rootUrl}/users/forgotPassword`, user);\n\n    dispatch(showAlert('success', 'forgotPassword', response.data.message));\n  } catch (err) {\n    dispatch(showAlert('danger', 'forgotPassword', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert())\n  }, 5000);\n\n  dispatch(setLoading());\n}\n\nexport const resetPassword = (userData, token) => async (dispatch) => {\n  dispatch(setLoading());\n\n  try {\n    const response = await axios.patch(`${rootUrl}/users/resetPassword/${token}`, userData);\n\n    dispatch(showAlert('success', 'resetPassword', 'Password reset successfully'));\n    dispatch(setAuthToken(response.data.token));\n    dispatch(fetchUser(response.data.data.user));\n  } catch (err) {\n    dispatch(showAlert('danger', 'resetPassword', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert())\n  }, 5000);\n\n  dispatch(setLoading());\n}\n\nconst fetchUser = (user) => {\n  return {\n    type: FETCH_USER,\n    payload: user\n  }\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Navbar,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\n\nimport LanguageSelector from '../utils/LanguageSelector';\n\nimport { logoutUser } from '../../store/actions/auth'\n\nconst Navigation = (props) => {\n  const { onChangeLanguage } = props;\n  const [showNavbar, setShowNavbar] = useState(false);\n  const { t } = useTranslation();\n\n  const toggleNavbar = () => {\n    setShowNavbar(!showNavbar);\n  }\n\n  return (\n    <div>\n      <Navbar expand=\"md\" >\n        <NavbarToggler\n          onClick={toggleNavbar}\n          bg=\"light\"\n          expand=\"sm\"\n          className=\"mr-2\"\n        />\n        <Collapse navbar isOpen={showNavbar}>\n          <Nav className=\"me-auto\" navbar>\n            <UncontrolledDropdown inNavbar nav >\n              <DropdownToggle caret nav>\n                {t('sight-words')}\n              </DropdownToggle>\n              <DropdownMenu end>\n                <DropdownItem>\n                  <NavItem>\n                    <Link to=\"/\">\n                      {t('all-words')}\n                    </Link>\n                  </NavItem>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavItem>\n                    <Link to=\"/random-words\">\n                      {t('random-words')}\n                    </Link>\n                  </NavItem>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavItem>\n                    <Link to=\"/update-word-list\">\n                      {t('update-word-list')}\n                    </Link>\n                  </NavItem>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown inNavbar nav  >\n              <DropdownToggle caret nav >\n                {t('phrases')}\n              </DropdownToggle>\n              <DropdownMenu end>\n                <DropdownItem>\n                  <NavItem>\n                    <Link to=\"/phrases\">\n                      {t('all-phrases')}\n                    </Link>\n                  </NavItem>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavItem>\n                    <Link to=\"/random-phrases\">\n                      {t('random-phrases')}\n                    </Link>\n                  </NavItem>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavItem>\n                    <Link to=\"/update-phrase-list\">\n                      {t('update-phrase-list')}\n                    </Link>\n                  </NavItem>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown inNavbar nav >\n              <DropdownToggle caret nav >\n                {t('user')}\n              </DropdownToggle>\n              <DropdownMenu end>\n                <DropdownItem>\n                  <NavItem>\n                    <Link to=\"/\" onClick={() => props.logoutUser()}>\n                      {t('logout')}\n                    </Link>\n                  </NavItem>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <LanguageSelector onChangeLanguage={onChangeLanguage} />\n        </Collapse>\n      </Navbar>\n    </div >\n  );\n}\n\nexport default connect(null, { logoutUser })(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport Navigation from './Navigation';\nimport LanguageSelector from '../utils/LanguageSelector';\n\nconst Header = (props) => {\n  const { token, onChangeLanguage } = props;\n  const { t } = useTranslation();\n\n  return (\n    <header className=\"header\">\n      <h1>{t('sight-words')}</h1>\n      {\n        !token && <LanguageSelector onChangeLanguage={onChangeLanguage} />\n      }\n      {token && <Navigation onChangeLanguage={onChangeLanguage} />}\n    </header>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  }\n}\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Alert } from 'reactstrap';\n\nimport { clearAlert } from '../../store/actions';\n\nconst AlertBox = (props) => {\n  const { style, message, clearAlert } = props;\n\n  const closeAlert = () => {\n    clearAlert();\n  }\n\n  return (\n    <Alert color={style} className=\"alert-box\">\n      {message}\n      <button className=\"close\" onClick={closeAlert}>x</button>\n    </Alert>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert\n  }\n}\n\nexport default connect(mapStateToProps, { clearAlert })(AlertBox);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button, } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nimport AlertBox from '../utils/AlertBox';\nimport { clearError } from '../../store/actions';\nimport { registerUser } from '../../store/actions/auth';\n\n\nconst Register = (props) => {\n  const { alert, registerUser } = props;\n  const { t } = useTranslation();\n\n  const [formData, setFormData] = useState({\n    name: null,\n    email: null,\n    userName: null,\n    password: null,\n    passwordConfirm: null\n  })\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleSubmit = () => {\n    registerUser(formData);\n  }\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        {\n          alert.showAlert && alert.location === 'register'\n            ? <AlertBox\n              style={alert.alertType}\n              message={alert.message}\n            />\n            : null\n        }\n        <Col\n          xs={{ size: 10, offset: 1 }}\n        >\n          <Form className=\"site-content_content-login\">\n            <h3>{t('register')}</h3>\n            <span>{t('already-registered')}{' '}\n              <Link to=\"/login\">{t('login-here')} {' '}\n                {' '} <FontAwesomeIcon icon={faArrowRight} />\n              </Link>\n            </span>\n            <FormGroup className=\"site-content_content-login-form\">\n              <Row>\n                <Col\n                  xs={12}\n                  md={6}\n                >\n                  <Label for=\"name\">{t('name')}</Label>\n                  <Input\n                    id=\"name\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    type=\"email\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Label for=\"email\">{t('email')}</Label>\n                  <Input\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email address\"\n                    type=\"email\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Label for=\"email\">{t('username')}</Label>\n                  <Input\n                    id=\"userName\"\n                    name=\"userName\"\n                    placeholder=\"Username\"\n                    type=\"text\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </Col>\n                <Col\n                  xs={12}\n                  md={6}\n                >\n                  <Label for=\"email\">{t('password')}</Label>\n                  <Input\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  <Label for=\"email\">{t('confirm-password')}</Label>\n                  <Input\n                    id=\"passwordConfirm\"\n                    name=\"passwordConfirm\"\n                    placeholder=\"Confirm Password\"\n                    type=\"password\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </Col>\n              </Row>\n            </FormGroup>\n            <Button color=\"secondary\" onClick={handleSubmit}>{t('register')}</Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert\n  }\n}\n\nexport default connect(mapStateToProps, { registerUser, clearError })(Register);","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Button, } from 'reactstrap';\n\nimport AlertBox from '../utils/AlertBox';\n\nimport { confirmEmail } from '../../store/actions/auth';\n\nconst ConfirmEmail = (props) => {\n  const { alert, confirmEmail } = props;\n  const { token } = useParams();\n  const { t } = useTranslation();\n\n  const handleSubmit = () => {\n    confirmEmail(token);\n  }\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        {\n          alert.showAlert && alert.location === 'confirmEmail'\n            ? <AlertBox\n              style={alert.alertType}\n              message={alert.message}\n            />\n            : null\n        }\n        <Col\n          xs={{ size: 10, offset: 1 }}\n          lg={{ size: 6, offset: 3 }}\n        >\n          <Button color=\"primary\" onClick={handleSubmit}>\n            {t('confirm-email')}\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert\n  }\n}\n\nexport default connect(mapStateToProps, { confirmEmail })(ConfirmEmail);","import React, { useState } from 'react';\nimport { Link, } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport AlertBox from '../utils/AlertBox';\nimport { clearError } from '../../store/actions';\nimport { forgotPassword } from '../../store/actions/auth';\n\nconst ForgotPassword = (props) => {\n  const { alert, clearError, forgotPassword } = props;\n  const [userName, setUserName] = useState(null);\n  const { t } = useTranslation();\n\n  const handleSubmit = () => {\n    const user = {\n      userName: userName,\n    }\n\n    clearError();\n    forgotPassword(user);\n  }\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        {\n          alert.showAlert && alert.location === 'forgotPassword'\n            ? <AlertBox\n              style={alert.alertType}\n              message={alert.message}\n            />\n            : null\n        }\n        <Col\n          xs={{ size: 10, offset: 1 }}\n          lg={{ size: 6, offset: 3 }}\n        >\n          <Form className=\"site-content_content-login\">\n            <h3>{t('forgot-password')}</h3>\n            <FormGroup className=\"site-content_content-login-form\">\n              <Label for=\"email\">{t('email')} / {t('username')}</Label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email or username\"\n                type=\"email\"\n                onChange={(e) => setUserName(e.target.value)}\n              />\n            </FormGroup>\n            <div className=\"site-content_content-login-submit\">\n              <Button color=\"secondary\" onClick={handleSubmit}>\n                {t('password-reset-token')}\n              </Button>\n            </div>\n            <span>\n              <Link to=\"/\" className=\"site-content_content-login-redirect\">\n                <FontAwesomeIcon\n                  icon={faArrowLeft}\n                />{t('back-to-login')}\n              </Link>\n            </span>\n          </Form>\n        </Col >\n      </Row >\n    </Container >\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert\n  }\n}\n\nexport default connect(mapStateToProps, { forgotPassword, clearError })(ForgotPassword);","import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport AlertBox from '../utils/AlertBox';\nimport { clearError } from '../../store/actions';\nimport { resetPassword } from '../../store/actions/auth';\n\nconst ResetPassword = (props) => {\n  const { alert, resetPassword } = props;\n  const { token } = useParams();\n  const [password, setPassword] = useState(null);\n  const [passwordConfirm, setPasswordConfirm] = useState(null);\n  const { t } = useTranslation();\n\n  const handleSubmit = () => {\n    const userData = {\n      password,\n      passwordConfirm\n    }\n\n    resetPassword(userData, token);\n  }\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        {\n          alert.showAlert && alert.location === 'resetPassword'\n            ? <AlertBox\n              style={alert.alertType}\n              message={alert.message}\n            />\n            : null\n        }\n        <Col\n          xs={{ size: 10, offset: 1 }}\n          lg={{ size: 6, offset: 3 }}\n        >\n          <Form className=\"site-content_content-login\">\n            <h3>{t('reset-password')}</h3>\n            <FormGroup className=\"site-content_content-login-form\">\n              <Label for=\"email\">{t('new-password')}</Label>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Enter new password\"\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Label for=\"email\">{t('confirm-new-password')}</Label>\n              <Input\n                id=\"passwordConfirm\"\n                name=\"passwordConfirm\"\n                placeholder=\"Confirm new password\"\n                type=\"password\"\n                onChange={(e) => setPasswordConfirm(e.target.value)}\n              />\n            </FormGroup>\n            <div className=\"site-content_content-login-submit\">\n              <Button color=\"secondary\" onClick={handleSubmit}>{t('reset')}</Button>\n            </div>\n            <span>\n              <Link to=\"/\" className=\"site-content_content-login-redirect\">\n                <FontAwesomeIcon icon={faArrowLeft} />{t('back-to-login')}\n              </Link>\n            </span>\n          </Form>\n        </Col >\n      </Row >\n    </Container >\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert\n  }\n}\n\nexport default connect(mapStateToProps, { resetPassword, clearError })(ResetPassword);","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nimport AlertBox from '../utils/AlertBox';\nimport { clearError } from '../../store/actions';\nimport { loginUser } from '../../store/actions/auth';\n\nconst Login = (props) => {\n  const { alert, clearError, loginUser } = props;\n  const [userName, setUserName] = useState(null);\n  const [userPassword, setUserPassword] = useState(null);\n  const { t } = useTranslation();\n\n  const handleSubmit = () => {\n    const user = {\n      userName: userName,\n      password: userPassword\n    }\n\n    clearError();\n    loginUser(user);\n  }\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        {\n          alert.showAlert && alert.location === 'login'\n            ? <AlertBox style={alert.alertType} message={alert.message} />\n            : null\n        }\n        <Col\n          xs={{ size: 10, offset: 1 }}\n          lg={{ size: 6, offset: 3 }}\n        >\n          <Form className=\"site-content_content-login\">\n            <h3>{t('login')}</h3>\n            <span>{t('dont-have-account')}{' '}\n              <Link to=\"/register\" className=\"site-content_content-login-redirect\">{t('register-here')} {' '}\n                {' '} <FontAwesomeIcon icon={faArrowRight} />\n              </Link>\n            </span>\n            <FormGroup className=\"site-content_content-login-form\">\n              <Label for=\"email\">{t('email')} / {t('username')}</Label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email or username\"\n                type=\"email\"\n                onChange={(e) => setUserName(e.target.value)}\n              />\n              <Label for=\"email\">{t('password')}</Label>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={(e) => setUserPassword(e.target.value)}\n              />\n            </FormGroup>\n            <div className=\"site-content_content-login-submit\">\n              <Button color=\"secondary\" onClick={handleSubmit}>{t('login')}</Button>\n            </div>\n            <span>{t('forgotten-password')}{' '}\n              <Link to=\"/forgot-password\" className=\"site-content_content-login-redirect\">\n                {t('click-to-reset')}\n              </Link>\n            </span>\n          </Form>\n        </Col >\n      </Row >\n    </Container >\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert\n  }\n}\n\nexport default connect(mapStateToProps, { loginUser, clearError })(Login);","import React from 'react';\n\nconst Syllables = ({ syllables }) => {\n\n  const syllablesArray = syllables.split(\",\");\n\n  return (\n    syllablesArray.map((syllable, i) => {\n      return <p key={i}>{syllable}{i < syllables.length - 1 ? \"/\" : null}</p>\n    })\n  )\n}\n\nexport default Syllables;","import React from 'react';\n\nimport Syllables from './Syllables';\n\nconst Word = ({ selectedWord }) => {\n  const { word, syllables } = selectedWord;\n\n  return (\n    <div>\n      <h3>{word}</h3>\n      <Syllables syllables={syllables} />\n    </div>\n  );\n}\n\nexport default Word;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Button } from 'reactstrap';\n\n\nconst NoItems = ({ type, redirectTo }) => {\n  const { t } = useTranslation();\n  const typeString = type.split(' ').join('-');\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        <Col xs={12} >\n          <h2>{t('you-dont-have-any')} {t(typeString)}</h2>\n          <Button color=\"primary\" className=\"btn-no-items\">\n            <Link to={`/${redirectTo}`}>\n              {t('add')} {t(typeString)}\n            </Link>\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default NoItems;","import React, { useState } from 'react';\nimport { Row, Col, Input } from 'reactstrap';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons';\n\nconst TextToSpeech = ({ text }) => {\n  const { speak } = useSpeechSynthesis();\n  const [rate, setRate] = useState(1);\n\n  const speakText = () => {\n    speak({\n      text,\n      rate\n    });\n  }\n\n  const handleSliderChange = (e) => {\n    setRate(e.target.value)\n  }\n\n  return (\n    <Row className=\"text-to-speech\">\n      <Col xs={12} className=\"text-to-speech_contents\">\n        <FontAwesomeIcon\n          icon={faVolumeUp}\n          onClick={speakText}\n        />\n        <Input\n          type=\"range\"\n          value={rate}\n          min=\"0.5\"\n          max=\"2\"\n          step=\"0.1\"\n          onChange={e => handleSliderChange(e)}\n          className=\"text-to-speech_range\"\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TextToSpeech;","export const setRequestHeaders = (token) => {\n  return {\n    \"Content-type\": \"application/json\",\n    \"authorization\": token\n  }\n}","import axios from 'axios';\n\nimport rootUrl from '../../config/config';\nimport { setRequestHeaders } from '../../utils/utils';\nimport { showAlert, clearAlert, setError, setLoading, setServerError } from './index';\n\nimport { FETCH_SIGHT_WORDS } from './types';\n\nexport const fetchSightWords = (token) => async (dispatch) => {\n  const options = setRequestHeaders(token);\n\n  dispatch(setLoading());\n\n  try {\n    const response = await axios.get(`${rootUrl}/sight-words`,\n      { headers: { ...options } }\n    );\n\n    if (response.data.status === 'error') {\n      dispatch(setError(response.data.message));\n    } else {\n      dispatch({\n        type: FETCH_SIGHT_WORDS,\n        payload: response.data.data.sightWords\n      })\n    }\n\n  } catch (err) {\n    dispatch(setError(setServerError(err)));\n  }\n\n  dispatch(setLoading());\n}\n\nexport const insertSightWord = (wordData, token) => async (dispatch) => {\n  const options = setRequestHeaders(token);\n\n  dispatch(setLoading());\n\n  try {\n    await axios.post(`${rootUrl}/sight-words`,\n      {\n        word: wordData.word,\n        syllables: wordData.syllables\n      },\n      { headers: { ...options } }\n    );\n\n    dispatch(showAlert('success', 'sightWordsList', 'New sight word added successfully'));\n    dispatch(fetchSightWords(token));\n  } catch (err) {\n    dispatch(showAlert('danger', 'sightWordsList', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert());\n  }, 3000);\n\n  dispatch(setLoading());\n}\n\nexport const updateSightWord = (wordId, token, params) => async (dispatch) => {\n  const options = setRequestHeaders(token);\n\n  dispatch(setLoading());\n\n  try {\n    await axios.patch(`${rootUrl}/sight-words/${wordId}`,\n      { ...params },\n      { headers: { ...options } }\n    );\n\n    dispatch(showAlert('success', 'sightWordsList', 'Sight word updated successfully'));\n\n    dispatch(fetchSightWords(token));\n  } catch (err) {\n    dispatch(showAlert('danger', 'sightWordsList', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert());\n  }, 3000);\n\n  dispatch(setLoading());\n}\n\nexport const deleteSightWord = (wordId, token) => async (dispatch) => {\n  const options = setRequestHeaders(token);\n\n  dispatch(setLoading());\n\n  try {\n    await axios.delete(`${rootUrl}/sight-words/${wordId}`,\n      { headers: { ...options } },\n      null\n    );\n\n    dispatch(showAlert('success', 'sightWordsList', 'Sight word deleted successfully'))\n    dispatch(fetchSightWords(token));\n  } catch (err) {\n    dispatch(showAlert('danger', 'sightWordsList', err.response.data.message));\n  }\n  setTimeout(() => {\n    dispatch(clearAlert())\n  }, 3000);\n\n  dispatch(setLoading());\n}","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleRight, faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport Word from './Word';\nimport NoItems from '../utils/NoItems';\nimport TextToSpeech from '../utils/TextToSpeech';\n\nimport { fetchSightWords } from '../../store/actions/sightWords'\n\nconst SightWords = (props) => {\n  const { auth, fetchSightWords, words } = props;\n  const [wordIndex, setWordIndex] = useState(0);\n  const wordList = words.filter(word => !word.complete);\n\n  useEffect(() => {\n    if (!auth.token) return;\n    fetchSightWords(auth.token);\n  }, [auth.token, fetchSightWords]);\n\n  const incrementWordIndex = () => {\n    setWordIndex(wordIndex + 1);\n  }\n\n  const decrementWordIndex = () => {\n    setWordIndex(wordIndex - 1);\n  }\n\n  if (!wordList.length) return <NoItems type=\"sight words\" redirectTo='update-word-list' />\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        <Col xs={12} >\n          <Word selectedWord={wordList[wordIndex]} />\n        </Col>\n        <TextToSpeech text={wordList[wordIndex].word} />\n        <Col\n          xs={12}\n          md={6}\n          className=\"site-content_content-buttons\"\n        >\n          {\n            wordIndex > 0\n              ? wordIndex < wordList.length\n                ? <FontAwesomeIcon\n                  icon={faArrowAltCircleLeft}\n                  onClick={decrementWordIndex}\n                  className=\"site-content_content-buttons-left\"\n                />\n                : null\n              : null\n          }\n          {\n            wordIndex < wordList.length - 1\n              ? <FontAwesomeIcon\n                icon={faArrowAltCircleRight}\n                onClick={incrementWordIndex}\n                className=\"site-content_content-buttons-right\"\n              />\n              : null\n          }\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    auth: state.auth,\n    words: state.words.words\n  }\n}\n\nexport default connect(mapStateToProps, { fetchSightWords })(SightWords);","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { useTranslation } from \"react-i18next\";\nimport { Container, Row, Col, Button } from 'reactstrap';\n\nimport Word from './Word';\nimport NoItems from '../utils/NoItems';\nimport TextToSpeech from '../utils/TextToSpeech';\n\nconst RandomWords = (props) => {\n  const { words } = props;\n  const wordList = words.filter(word => !word.complete);\n  const { t } = useTranslation();\n\n  const generateRandomWordIndex = () => {\n    return Math.floor(Math.random() * wordList.length);\n  }\n\n  const [wordIndex, setWordIndex] = useState(generateRandomWordIndex());\n\n  const handleClick = () => {\n    setWordIndex(generateRandomWordIndex());\n  }\n\n  if (!wordList.length) return <NoItems type=\"sight words\" redirectTo='update-word-list' />\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        <Col xs={12} >\n          <Word\n            selectedWord={wordList[wordIndex]}\n          />\n        </Col>\n        <TextToSpeech text={wordList[wordIndex].word} />\n        <Col xs={6} className=\"site-content_content-buttons\">\n          {\n            wordList.length > 1\n            && <Button\n              color=\"primary\"\n              onClick={handleClick}\n            >\n              {t('next')}\n            </Button>\n          }\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    words: state.words.words\n  }\n}\n\nexport default connect(mapStateToProps)(RandomWords);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faSquare, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst WordDetails = (props) => {\n  const { wordObject, onClickDelete, onClickComplete, token } = props;\n  const { word, syllables, complete } = wordObject;\n\n  const handleClickComplete = (e) => {\n    const params = {\n      complete: !wordObject.complete ? true : false\n    }\n\n    onClickComplete(wordObject._id, token, params);\n  }\n\n  const handleClickEdit = (e) => {\n    console.log('Clicking edit');\n  }\n\n  const handleClickDelete = (e) => {\n    onClickDelete();\n  }\n\n  return (\n    <tr>\n      <th scope=\"row\">\n        {word}\n      </th>\n      <td>\n        {syllables}\n      </td>\n      <td>\n        <FontAwesomeIcon icon={complete ? faCheckSquare : faSquare} onClick={handleClickComplete} />\n      </td>\n      {/* <td>\n        <FontAwesomeIcon icon={faEdit} onClick={handleClickEdit} />\n      </td> */}\n      <td>\n        <FontAwesomeIcon icon={faTrashAlt} onClick={handleClickDelete} />\n      </td>\n    </tr>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  }\n}\n\nexport default connect(mapStateToProps)(WordDetails);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Input,\n  FormText\n} from 'reactstrap';\n\nimport { insertSightWord } from '../../store/actions/sightWords';\n\nconst AddWordModal = (props) => {\n  const { isOpen, toggleModal, insertSightWord, token } = props;\n  const [wordData, setWordData] = useState({\n    word: '',\n    syllables: ''\n  });\n  const { t } = useTranslation();\n\n\n  const handleInputChange = (e) => {\n    setWordData({\n      ...wordData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const handleAddWordSumbit = () => {\n    insertSightWord(wordData, token);\n    toggle();\n  }\n\n  const toggle = () => {\n    setWordData({ word: '', syllables: '' });\n    toggleModal();\n  }\n\n  return (\n    <Modal\n      centered\n      size=\"lg\"\n      toggle={toggle}\n      isOpen={isOpen}\n    >\n      <ModalHeader toggle={toggleModal}>\n        {t('add-new-word')}\n      </ModalHeader>\n      <ModalBody>\n        <Input\n          bsSize=\"sm\"\n          onChange={(e) => handleInputChange(e)}\n          value={wordData.word}\n          name=\"word\"\n        />\n        <FormText>{t('enter-word-here')}</FormText>\n        <Input\n          bsSize=\"sm\"\n          onChange={(e) => handleInputChange(e)}\n          value={wordData.syllables}\n          name=\"syllables\"\n        />\n        <FormText>{t('enter-syllables')}</FormText>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          color=\"primary\"\n          onClick={handleAddWordSumbit}\n        >\n          {t('submit')}\n        </Button>\n        {' '}\n        <Button onClick={toggleModal}>\n          {t('cancel')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    user: state.user.user\n  }\n}\n\nexport default connect(mapStateToProps, { insertSightWord })(AddWordModal);\n","import React from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  Button,\n} from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nconst DeleteConfirmModal = (props) => {\n  const { isOpen, toggleModal, onConfirmDelete, phraseId } = props;\n  const { t } = useTranslation();\n\n  const toggle = () => {\n    toggleModal();\n  }\n\n  const handleConfirmDelete = () => {\n    onConfirmDelete(phraseId);\n  }\n\n  return (\n    <Modal\n      centered\n      size=\"lg\"\n      toggle={toggle}\n      isOpen={isOpen}\n      className=\"modal_delete-confirm\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        {t('are-you-sure-you-want-to-delete')}\n      </ModalHeader>\n      <ModalFooter>\n        <Button\n          color=\"primary\"\n          onClick={handleConfirmDelete}\n        >\n          {t('confirm')}\n        </Button>\n        {' '}\n        <Button onClick={toggleModal}>\n          {t('cancel')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nexport default DeleteConfirmModal;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Table } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport WordDetails from './WordDetails';\nimport AddWordModal from '../modals/AddWordModal'\nimport DeleteConfirmModal from '../modals/DeleteConfirmModal'\nimport AlertBox from '../utils/AlertBox';\n\nimport { fetchSightWords, updateSightWord, deleteSightWord } from '../../store/actions/sightWords';\n\nconst UpdateWordList = (props) => {\n  const {\n    alert,\n    words,\n    token,\n    user,\n    fetchSightWords,\n    updateSightWord,\n    deleteSightWord\n  } = props;\n  words.sort((a, b) => a.word.toLowerCase() > b.word.toLowerCase() ? 1 : -1);\n\n  const [showAddWordModal, setShowAddWordModal] = useState(false);\n  const [showConfirmDeleteModal, setShowConfirmDeleteModal] = useState(false);\n  const [wordId, setWordId] = useState(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (!words.length) fetchSightWords(token);\n  }, []);\n\n  const toggleAddWordModal = () => {\n    setShowAddWordModal(!showAddWordModal);\n  }\n\n  const toggleConfirmDeleteModal = (wordId) => {\n    setWordId(wordId)\n    setShowConfirmDeleteModal(!showConfirmDeleteModal);\n  }\n\n  const handleConfirmDelete = (wordId) => {\n    deleteSightWord(wordId, token);\n    toggleConfirmDeleteModal();\n  }\n\n  const handleClickAddWord = () => {\n    toggleAddWordModal();\n  }\n\n  const handleClickComplete = (wordId, token, params) => {\n    updateSightWord(wordId, token, params)\n  }\n\n  return (\n    <Container className=\"site-content\">\n      <AddWordModal\n        isOpen={showAddWordModal}\n        toggleModal={toggleAddWordModal}\n      />\n      <DeleteConfirmModal\n        isOpen={showConfirmDeleteModal}\n        toggleModal={toggleConfirmDeleteModal}\n        phraseId={wordId}\n        onConfirmDelete={handleConfirmDelete}\n      />\n      <Row className=\"site-content_phrase-list\">\n        {\n          alert.showAlert && alert.location === 'sightWordsList'\n            ? <AlertBox style={alert.alertType} message={alert.message} />\n            : null\n        }\n        <Col xs={12}>\n          <h2>{`${user.userName}${t('word-list')}`}</h2>\n        </Col>\n        <Col\n          xs={12}\n          className=\"site-content_phrase-list-table\"\n        >\n          <div className=\"add-phrase\">\n            <p>{t('add-word')}</p>\n            <FontAwesomeIcon\n              icon={faPlusSquare}\n              onClick={handleClickAddWord}\n            />\n          </div>\n          <Table hover>\n            <thead>\n              <tr>\n                <th>\n                  {t('word')}\n                </th>\n                <th>\n                  {t('syllables')}\n                </th>\n                <th>\n                  {t('complete')}\n                </th>\n                {/* <th>\n                  Edit\n                </th> */}\n                <th>\n                  {t('delete')}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {words.map(word => (\n                <WordDetails\n                  wordObject={word}\n                  key={word._id}\n                  onClickDelete={() => toggleConfirmDeleteModal(word._id)}\n                  onClickComplete={handleClickComplete}\n                />\n              )\n              )}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert,\n    words: state.words.words,\n    token: state.auth.token,\n    user: state.user.user\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchSightWords,\n    updateSightWord,\n    deleteSightWord\n  }\n)(UpdateWordList);","import React from 'react';\n\nconst Phrase = ({ selectedPhrase }) => {\n  const { phrase } = selectedPhrase;\n\n  return (\n    <div>\n      <h3>{phrase}</h3>\n    </div>\n  );\n}\n\nexport default Phrase;","import axios from 'axios';\n\nimport rootUrl from '../../config/config';\nimport { setRequestHeaders } from '../../utils/utils';\nimport { showAlert, clearAlert, setError, setLoading, setServerError } from './index';\nimport { FETCH_PHRASES } from './types';\n\nexport const fetchPhrases = (token) => async (dispatch) => {\n  const options = setRequestHeaders(token);\n\n  dispatch(setLoading());\n\n  try {\n    const response = await axios.get(`${rootUrl}/phrases`, { headers: { ...options } });\n\n    if (response.data.status === 'error') {\n      dispatch(setError(response.data.message));\n    } else {\n      dispatch({\n        type: FETCH_PHRASES,\n        payload: response.data.data.phrases\n      });\n    }\n  } catch (err) {\n    dispatch(setError(setServerError(err)));\n  }\n\n  dispatch(setLoading());\n}\n\nexport const insertPhrase = (phrase, token) => async (dispatch) => {\n  const options = setRequestHeaders(token);\n\n  dispatch(setLoading());\n\n  try {\n    await axios.post(`${rootUrl}/phrases`, { phrase }, { headers: { ...options } });\n\n    dispatch(showAlert('success', 'phrasesList', 'New phrase added successfully'))\n    dispatch(fetchPhrases(token));\n    // }\n  } catch (err) {\n    dispatch(showAlert('danger', 'phrasesList', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert());\n  }, 5000);\n\n  dispatch(setLoading());\n}\n\nexport const updatePhrase = (phraseId, token, params) => async (dispatch) => {\n  const options = setRequestHeaders(token);\n\n  dispatch(setLoading());\n\n  try {\n    await axios.patch(`${rootUrl}/phrases/${phraseId}`, { ...params }, { headers: { ...options } });\n\n    dispatch(showAlert('success', 'phrasesList', 'Phrase updated successfully'));\n    dispatch(fetchPhrases(token));\n  } catch (err) {\n    dispatch(showAlert('danger', 'phrasesList', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert());\n  }, 3000);\n\n  dispatch(setLoading());\n}\n\nexport const deletePhrase = (phraseId, token) => async (dispatch) => {\n  const options = setRequestHeaders(token);\n\n  dispatch(setLoading());\n\n  try {\n    await axios.delete(`${rootUrl}/phrases/${phraseId}`, { headers: { ...options } }, null);\n\n    dispatch(showAlert('success', 'phrasesList', 'Phrase deleted successfully'));\n    dispatch(fetchPhrases(token));\n    // }\n  } catch (err) {\n    dispatch(showAlert('danger', 'phrasesList', err.response.data.message));\n  }\n\n  setTimeout(() => {\n    dispatch(clearAlert());\n  }, 3000);\n\n  dispatch(setLoading());\n}","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleRight, faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport Phrase from './Phrase';\nimport NoItems from '../utils/NoItems';\nimport TextToSpeech from '../utils/TextToSpeech';\n\nimport { fetchPhrases } from '../../store/actions/phrases'\n\nconst Phrases = (props) => {\n  const { phrases, auth, fetchPhrases } = props;\n  const [phraseIndex, setPhraseIndex] = useState(0);\n  const phraseList = phrases.filter(phrase => !phrase.complete);\n\n  useEffect(() => {\n    if (!auth.token) return;\n    fetchPhrases(auth.token);\n  }, [auth.token, fetchPhrases]);\n\n  const incrementPhraseIndex = () => {\n    setPhraseIndex(phraseIndex + 1);\n  }\n\n  const decrementPhraseIndex = () => {\n    setPhraseIndex(phraseIndex - 1);\n  }\n\n  if (!phraseList.length) return <NoItems type=\"phrases\" redirectTo=\"update-phrase-list\" />\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        <Col xs={12} >\n          <Phrase selectedPhrase={phraseList[phraseIndex]} />\n        </Col>\n        <TextToSpeech text={phraseList[phraseIndex].phrase} />\n        <Col\n          xs={12}\n          md={6}\n          className=\"site-content_content-buttons\"\n        >\n          {\n            phraseIndex > 0\n              ? phraseIndex < phraseList.length\n                ? <FontAwesomeIcon\n                  icon={faArrowAltCircleLeft}\n                  onClick={decrementPhraseIndex}\n                  className=\"site-content_content-buttons-left\"\n                />\n                : null\n              : null\n          }\n          {\n            phraseIndex < phraseList.length - 1\n              ? <FontAwesomeIcon\n                icon={faArrowAltCircleRight}\n                onClick={incrementPhraseIndex}\n                className=\"site-content_content-buttons-right\"\n              />\n              : null\n          }\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    phrases: state.phrases.phrases,\n    auth: state.auth,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, { fetchPhrases })(Phrases);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Button } from 'reactstrap';\n\nimport Phrase from './Phrase';\nimport NoItems from '../utils/NoItems';\nimport TextToSpeech from '../utils/TextToSpeech';\n\nconst RandomPhrases = (props) => {\n  const { phrases } = props;\n  const phraseList = phrases.filter(phrase => !phrase.complete);\n  const { t } = useTranslation();\n\n  const generateRandomPhraseIndex = () => {\n    return Math.floor(Math.random() * phraseList.length);\n  }\n\n  const [phraseIndex, setPhraseIndex] = useState(generateRandomPhraseIndex());\n\n  const handleClick = () => {\n    setPhraseIndex(generateRandomPhraseIndex());\n  }\n\n  if (!phrases.length) return <NoItems type=\"phrases\" redirectTo='update-phrase-list' />\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        <Col xs={12} >\n          <Phrase selectedPhrase={phraseList[phraseIndex]} />\n        </Col>\n        <TextToSpeech text={phraseList[phraseIndex].phrase} />\n        <Col xs={6} className=\"site-content_content-buttons\">\n          {\n            phraseList.length > 1\n            && <Button\n              color=\"primary\"\n              onClick={handleClick}\n            >\n              {t('next')}\n            </Button>\n          }\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    phrases: state.phrases.phrases\n  }\n}\n\nexport default connect(mapStateToProps)(RandomPhrases);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faSquare, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst PhraseDetails = (props) => {\n  const {\n    selectedPhrase,\n    token,\n    onClickEdit,\n    onClickDelete,\n    onClickComplete\n  } = props;\n  const { phrase, complete } = selectedPhrase;\n\n  const handleClickComplete = (e) => {\n    const params = {\n      complete: selectedPhrase.complete ? \"0\" : \"1\"\n    }\n\n    onClickComplete(selectedPhrase._id, token, params);\n  }\n\n  const handleClickEdit = () => {\n    onClickEdit()\n  }\n\n  const handleClickDelete = () => {\n    onClickDelete();\n  }\n\n  return (\n    <tr>\n      <th scope=\"row\">\n        {phrase}\n      </th>\n      <td>\n        <FontAwesomeIcon\n          icon={complete ? faCheckSquare : faSquare}\n          onClick={(e) => handleClickComplete(e)}\n        />\n      </td>\n      {/* <td>\n        <FontAwesomeIcon icon={faEdit} onClick={handleClickEdit} />\n      </td> */}\n      <td>\n        <FontAwesomeIcon\n          icon={faTrashAlt}\n          onClick={handleClickDelete}\n        />\n      </td>\n    </tr>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  }\n}\n\nexport default connect(mapStateToProps)(PhraseDetails);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Input\n} from 'reactstrap';\n\nimport { insertPhrase } from '../../store/actions/phrases';\n\nconst AddPhraseModal = (props) => {\n  const { isOpen, toggleModal, insertPhrase, token } = props;\n  const [phrase, setPhrase] = useState(null);\n  const { t } = useTranslation();\n\n\n  const handleInputChange = (e) => {\n    setTimeout(() => {\n      setPhrase(e.target.value);\n    }, 200)\n  }\n\n  // TODO: MAKE SURE EMPTY PHRASE CANNOT BE SUBMITTED\n  const handleAddPhraseSumbit = () => {\n    insertPhrase(phrase, token);\n    toggleModal();\n  }\n\n  const toggle = () => {\n    setPhrase(null);\n    toggleModal();\n  }\n\n  return (\n    <Modal\n      centered\n      size=\"lg\"\n      toggle={toggle}\n      isOpen={isOpen}\n    >\n      <ModalHeader toggle={toggleModal}>\n        {t('add-new-phrase')}\n      </ModalHeader>\n      <ModalBody>\n        <Input\n          type=\"textarea\"\n          bsSize=\"sm\"\n          onChange={(e) => handleInputChange(e)}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          color=\"primary\"\n          onClick={handleAddPhraseSumbit}\n        >\n          {t('submit')}\n        </Button>\n        {' '}\n        <Button onClick={toggleModal}>\n          {t('cancel')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    user: state.user.user\n  }\n}\n\nexport default connect(mapStateToProps, { insertPhrase })(AddPhraseModal);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Input\n} from 'reactstrap';\n\nconst EditPhraseModal = (props) => {\n  const {\n    isOpen,\n    toggleModal,\n    phraseId,\n    token,\n    selectedPhrase,\n    onConfirmEdit\n  } = props;\n\n  const [phrase, setPhrase] = useState(null);\n\n  useEffect(() => {\n    setPhrase(selectedPhrase);\n  }, [selectedPhrase]);\n\n  // TODO: FIND A MORE ELEGANT WAY TO HANDLE THIS\n  const handleInputChange = (e) => {\n    setTimeout(() => {\n      setPhrase(e.target.value);\n    }, 200);\n  }\n\n  // TODO: AND THIS...\n  const handleEditPhraseSumbit = () => {\n    const params = {\n      phrase: phrase.value ? phrase.value : phrase\n    }\n\n    onConfirmEdit(phraseId, token, params)\n    toggleModal();\n  }\n\n\n  const toggle = () => {\n    setPhrase(null);\n    toggleModal();\n  }\n\n  return (\n    <Modal\n      centered\n      size=\"lg\"\n      toggle={toggle}\n      isOpen={isOpen}\n    >\n      <ModalHeader toggle={toggle}>\n        Edit Phrase\n      </ModalHeader>\n      <ModalBody>\n        <Input\n          type=\"textarea\"\n          bsSize=\"sm\"\n          onChange={(e) => handleInputChange(e)}\n          value={phrase && phrase.value}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          color=\"primary\"\n          onClick={handleEditPhraseSumbit}\n        >\n          Submit\n        </Button>\n        {' '}\n        <Button onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    user: state.user.user\n  }\n}\n\nexport default connect(mapStateToProps)(EditPhraseModal);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Table } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport PhraseDetails from './PhraseDetails';\nimport AddPhraseModal from '../modals/AddPhraseModal';\nimport EditPhraseModal from '../modals/EditPhraseModal';\nimport DeleteConfirmModal from '../modals/DeleteConfirmModal';\nimport AlertBox from '../utils/AlertBox';\n\nimport { fetchPhrases, updatePhrase, deletePhrase } from '../../store/actions/phrases';\n\nconst UpdatePhraseList = (props) => {\n  const {\n    alert,\n    phrases,\n    token,\n    user,\n    fetchPhrases,\n    updatePhrase,\n    deletePhrase\n  } = props;\n\n  phrases.sort((a, b) => a.phrase.toLowerCase() > b.phrase.toLowerCase() ? 1 : -1);\n\n  const [showAddPhraseModal, setShowAddPhraseModal] = useState(false);\n  const [showEditPhraseModal, setShowEditPhraseModal] = useState(false);\n  const [showConfirmDeleteModal, setShowConfirmDeletePhraseModal] = useState(false);\n  const [phraseId, setPhraseId] = useState(null);\n  const { t } = useTranslation();\n\n  const selectedPhrase = phrases.filter(phrase => phrase._id === phraseId)[0]\n\n  useEffect(() => {\n    if (!phrases.length) fetchPhrases(token);\n  }, []);\n\n  const handleClickAddPhrase = () => {\n    setShowAddPhraseModal(!showAddPhraseModal);\n  }\n\n  const toggleAddPhraseModal = () => {\n    setShowAddPhraseModal(!showAddPhraseModal);\n  }\n\n  const toggleEditPhraseModal = (phraseId) => {\n    setPhraseId(phraseId);\n    setShowEditPhraseModal(!showEditPhraseModal);\n  }\n\n  const toggleConfirmDeleteModal = (phraseId) => {\n    setPhraseId(phraseId)\n    setShowConfirmDeletePhraseModal(!showConfirmDeleteModal);\n  }\n\n  const handleConfirmDelete = (phraseId) => {\n    deletePhrase(phraseId, token);\n    toggleConfirmDeleteModal();\n  }\n\n  const handleConfirmEdit = (phraseId, token, params) => {\n    updatePhrase(phraseId, token, params);\n  }\n\n  const handleClickComplete = (phraseId, token, params) => {\n    updatePhrase(phraseId, token, params);\n  }\n\n  return (\n    <Container className=\"site-content\">\n      <AddPhraseModal\n        isOpen={showAddPhraseModal}\n        toggleModal={toggleAddPhraseModal}\n      />\n      <EditPhraseModal\n        isOpen={showEditPhraseModal}\n        toggleModal={toggleEditPhraseModal}\n        onConfirmEdit={handleConfirmEdit}\n        phraseId={phraseId}\n        selectedPhrase={selectedPhrase}\n      />\n      <DeleteConfirmModal\n        isOpen={showConfirmDeleteModal}\n        toggleModal={toggleConfirmDeleteModal}\n        phraseId={phraseId}\n        onConfirmDelete={handleConfirmDelete}\n      />\n      <Row className=\"site-content_phrase-list\">\n        {\n          alert.showAlert && alert.location === 'phrasesList'\n            ? <AlertBox\n              style={alert.alertType}\n              message={alert.message}\n            />\n            : null\n        }\n        <Col xs={12}>\n          <h2>{`${user.userName}${t('phrase-list')}`}</h2>\n        </Col>\n        <Col\n          xs={12}\n          className=\"site-content_phrase-list-table\"\n        >\n          <div className=\"add-phrase\">\n            <p>{t('add-phrase')}</p>\n            <FontAwesomeIcon\n              icon={faPlusSquare}\n              onClick={handleClickAddPhrase}\n            />\n          </div>\n          <Table hover>\n            <thead>\n              <tr>\n                <th>\n                  {t('phrase')}\n                </th>\n                <th>\n                  {t('complete')}\n                </th>\n                {/* <th>\n                  Edit\n                </th> */}\n                <th>\n                  {t('delete')}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {phrases.map(phrase => {\n                return <PhraseDetails\n                  selectedPhrase={phrase}\n                  key={phrase._id}\n                  onClickEdit={() => toggleEditPhraseModal(phrase._id)}\n                  onClickDelete={() => toggleConfirmDeleteModal(phrase._id)}\n                  onClickComplete={handleClickComplete}\n                />\n              })}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.alert,\n    phrases: state.phrases.phrases,\n    token: state.auth.token,\n    user: state.user.user\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchPhrases,\n    updatePhrase,\n    deletePhrase\n  }\n)(UpdatePhraseList);","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"loading-spinner\">\n      <Spinner color=\"info\" />\n    </div>\n  )\n}\n\nexport default LoadingSpinner;","import React from 'react';\nimport { useLocation, Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next';\nimport { Container, Row, Col, Form, Button, } from 'reactstrap';\n\n\nconst NotFound = () => {\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  return (\n    <Container className=\"site-content\">\n      <Row className=\"site-content_content\">\n        <Col\n          xs={{ size: 10, offset: 1 }}\n          lg={{ size: 6, offset: 3 }}\n        >\n          <Form className=\"site-content_content-login\">\n            <h3>{t('not-found')}</h3>\n            <p>{t('unable-to-locate-page')} {`${process.env.PUBLIC_URL}${location.pathname}`}</p>\n            <div className=\"\">\n              <Button color=\"secondary\">\n                <Link to='/'>\n                  {t('return-to-home')}\n                </Link>\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NotFound;","import { Route, Switch, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Header from './components/layout/Header';\nimport Register from './components/user/Register';\nimport ConfirmEmail from './components/user/ConfirmEmail';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport ResetPassword from './components/user/ResetPassword';\nimport Login from './components/user/Login';\nimport SightWords from './components/sightWords/SightWords';\nimport RandomWords from './components/sightWords/RandomWords'\nimport UpdateWordList from './components/sightWords/UpdateWordList';\nimport Phrases from './components/phrases/Phrases'\nimport RandomPhrases from './components/phrases/RandomPhrases'\nimport UpdatePhraseList from './components/phrases/UpdatePhraseList';\nimport LoadingSpinner from './components/utils/LoadingSpinner';\nimport NotFound from './components/utils/NotFound';\n\nimport translationsEn from './translations/en.json';\nimport translationsTh from './translations/th.json';\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources: {\n      gb: { translation: translationsEn },\n      th: { translation: translationsTh }\n    },\n    lng: 'gb',\n    fallbackLng: 'gb',\n    interpolation: { excapeValue: false },\n  });\n\nfunction App(props) {\n  const { loading, token } = props;\n\n  const onChangeLanguage = (language) => {\n    i18n.changeLanguage(language)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header onChangeLanguage={onChangeLanguage} />\n      {loading && <LoadingSpinner />}\n      <Switch>\n        <Route exact path=\"/update-phrase-list\">\n          {token ? <UpdatePhraseList /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/random-phrases\">\n          {token ? <RandomPhrases /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/phrases\">\n          {token ? <Phrases /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/update-word-list\">\n          {token ? <UpdateWordList /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/random-words\">\n          {token ? <RandomWords /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/register\">\n          {token ? <Redirect to=\"/\" /> : <Register />}\n        </Route>\n        <Route exact path=\"/confirm-email/:token\">\n          {token ? <Redirect to=\"/\" /> : <ConfirmEmail />}\n        </Route>\n        <Route exact path=\"/forgot-password\">\n          {token ? <Redirect to=\"/\" /> : <ForgotPassword />}\n        </Route>\n        <Route exact path=\"/reset-password/:token\">\n          {token ? <Redirect to=\"/\" /> : <ResetPassword />}\n        </Route>\n        <Route exact path=\"/login\">\n          {token ? <Redirect to=\"/\" /> : <Login />}\n        </Route>\n        <Route exact path=\"/\">\n          {token ? <SightWords /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route exact component={NotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    token: state.auth.token\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { SHOW_ALERT, CLEAR_ALERT } from '../actions/types'\n\nconst initialState = {\n  showAlert: false,\n  alertType: null,\n  location: null,\n  message: null\n}\n\nexport default function alertReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_ALERT:\n      return {\n        ...state,\n        showAlert: true,\n        alertType: action.payload.type,\n        location: action.payload.location,\n        message: action.payload.message\n      }\n    case CLEAR_ALERT:\n      return initialState\n    default:\n      return state\n  }\n}\n\n","import {\n  SET_AUTH_TOKEN,\n  CLEAR_AUTH_TOKEN,\n  RESET_STATE,\n} from '../actions/types';\n\nconst initialState = {\n  token: null\n}\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTH_TOKEN:\n      return {\n        ...state,\n        token: action.payload\n      }\n    case CLEAR_AUTH_TOKEN:\n      return {\n        ...state,\n        token: null\n      }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}","import {\n  SET_ERROR,\n  CLEAR_ERROR,\n  RESET_STATE\n} from '../actions/types';\n\nconst initialState = {\n  message: null\n}\n\nexport default function errorReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_ERROR:\n      return {\n        ...state,\n        message: action.payload.message\n      }\n    case CLEAR_ERROR:\n      return initialState;\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}","import { SET_LOADING, RESET_STATE } from '../actions/types';\n\nconst initialState = false;\n\nexport default function loadingRedcucer(state = initialState, action) {\n  switch (action.type) {\n    case SET_LOADING:\n      return !state\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state\n  }\n}","import {\n  FETCH_PHRASES,\n  INSERT_PHRASE,\n  UPDATE_PHRASE,\n  DELETE_PHRASE,\n  CLEAR_PHRASES,\n  RESET_STATE\n} from '../actions/types';\n\nconst initialState = {\n  phrases: []\n}\n\nexport default function phrasesReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PHRASES:\n      return {\n        ...state,\n        phrases: action.payload\n      }\n    case INSERT_PHRASE:\n    case UPDATE_PHRASE:\n    case DELETE_PHRASE:\n      return state\n    case CLEAR_PHRASES:\n      return {\n        ...state,\n        phrases: []\n      }\n    case RESET_STATE:\n      return initialState\n    default:\n      return state\n  }\n}","import { FETCH_USER, RESET_STATE } from '../actions/types';\n\nconst initialState = {\n  user: null\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return {\n        ...state,\n        user: { ...action.payload }\n      }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state\n  }\n}","import {\n  FETCH_SIGHT_WORDS,\n  CLEAR_SIGHT_WORDS,\n  RESET_STATE\n} from '../actions/types';\n\nconst initialState = {\n  words: []\n}\n\nexport default function wordsReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_SIGHT_WORDS:\n      return {\n        ...state,\n        words: action.payload\n      }\n    case CLEAR_SIGHT_WORDS:\n      return initialState\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport alertReducer from './alertReducer';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport loadingReducer from './loadingReducer';\nimport phrasesReducer from './phrasesReducer';\nimport userReducer from './userReducer';\nimport wordsReducer from './wordsReducer';\n\nexport default combineReducers({\n  alert: alertReducer,\n  auth: authReducer,\n  error: errorReducer,\n  loading: loadingReducer,\n  phrases: phrasesReducer,\n  user: userReducer,\n  words: wordsReducer\n});\n\n\n\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'sight-words',\n  storage,\n  blacklist: ['loading']\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = process.env.NODE_ENV === 'production' ?\n  createStore(persistedReducer, applyMiddleware(thunk)) :\n  createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/style.scss';\nimport { store, persistor } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <PersistGate persistor={persistor} >\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}